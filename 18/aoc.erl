-module(aoc).
-export([part1/0,part2/0]).

part1() ->
    [H | T] = input(),
    magnitude(lists:foldl(fun (Current, Agg) -> reduce([Agg, Current]) end, H, T)).

part2() ->
    List = input(),
    lists:max(lists:flatmap(fun (L) ->
        lists:map(fun (L2) -> magnitude(reduce([L2, L])) end, List -- [L])
    end, List)).

reduce(A) ->
    case explode(A, 0) of
        A ->
            case split(A) of
                A -> A;
                AfterSplit -> reduce(AfterSplit)
            end;
        {_, _, AfterExplode} -> reduce(AfterExplode);
        AfterExplode -> reduce(AfterExplode)
    end.

% replaced my hard to read solution with danilagamma's solution
% from the erlangforums
explode([A, B], Level) when is_list(A); is_list(B) ->
    case explode(A, Level + 1) of
        {explode, [Left, Right]} -> {left, Left, [0, add_left(Right, B)]};
        {left, Left, NewA} -> {left, Left, [NewA, B]};
        {right, Right, NewA} -> [NewA, add_left(Right, B)];
        NewA when NewA =/= A -> [NewA, B];
        A ->
            case explode(B, Level + 1) of
                {explode, [Left, Right]} -> {right, Right, [add_right(Left, A), 0]};
                {right, Right, NewB} -> {right, Right, [A, NewB]};
                {left,  Left,  NewB} -> [add_right(Left, A), NewB];
                NewB -> [A, NewB]
            end
    end;
explode([A, B], 4) ->
    {explode, [A, B]};
explode(A, _) ->
    A.

split([A, B]) ->
  case split(A) of
      A    -> [A, split(B)];
      NewA -> [NewA, B]
  end;
split(A) when A > 9 ->
    Left = trunc(A / 2),
    [Left, A - Left];
split(A) -> A.

add_left(N, [A, B]) -> [add_left(N, A), B];
add_left(N, A) -> N + A.

add_right(N, [A, B]) -> [A, add_right(N, B)];
add_right(N, A) -> N + A.

magnitude([A, B]) -> 3 * magnitude(A) + 2 * magnitude(B);
magnitude(A) -> A.

input() ->
    [
        [[2,[[4,8],7]],[[9,7],[[2,0],9]]],
        [0,[7,5]],
        [[[5,[6,9]],4],[3,3]],
        [[[6,[6,9]],4],[[[4,8],8],[6,5]]],
        [[[[1,4],[2,1]],[6,0]],[[[9,1],[4,2]],[[0,4],0]]],
        [[9,4],[[8,6],1]],
        [[[[0,7],0],7],[1,[2,9]]],
        [[[2,9],[[8,4],[4,0]]],[[[6,2],2],[9,5]]],
        [[[0,[5,8]],[6,8]],[[[0,7],4],[[2,8],4]]],
        [[3,[[4,1],[0,7]]],[[1,[5,1]],4]],
        [[[[2,9],6],[[5,3],2]],[[8,[2,0]],9]],
        [0,[[[2,7],9],[1,8]]],
        [[[2,[6,2]],[[4,0],[9,6]]],[[6,1],[8,9]]],
        [[[[9,6],9],[5,[1,8]]],[[[9,6],9],[[2,0],[3,8]]]],
        [[[[4,3],[0,8]],4],[6,6]],
        [[[[4,3],7],[[7,0],5]],[2,[[9,9],4]]],
        [[[[4,3],[1,7]],[[3,1],[0,9]]],0],
        [[5,[[2,5],[2,8]]],[[4,0],[[5,2],[9,8]]]],
        [[[0,[3,5]],7],[[[5,9],2],4]],
        [[9,[[4,4],8]],[[[2,8],1],[[0,9],5]]],
        [[[6,8],[0,1]],[[8,2],[2,0]]],
        [[[1,9],[[9,1],2]],[[6,4],[[7,7],[8,3]]]],
        [[1,[5,[7,6]]],[[[4,7],4],5]],
        [[[8,0],9],[[[6,0],4],1]],
        [[[4,[4,2]],7],[[6,[0,9]],[[3,0],[7,6]]]],
        [[[[3,4],[9,0]],[4,4]],[[9,6],7]],
        [4,[[8,3],[7,1]]],
        [6,[6,8]],
        [[[[0,6],[7,6]],[5,3]],[[[8,9],[6,0]],[[8,5],7]]],
        [[[[0,3],1],5],[[[4,3],[3,2]],[2,[5,9]]]],
        [[[[3,1],0],[1,[8,4]]],[4,5]],
        [[[0,[4,1]],1],[[1,6],[[4,8],[8,3]]]],
        [[[1,4],6],[9,[1,2]]],
        [[9,[[0,7],1]],[[0,9],[0,[4,4]]]],
        [[1,[7,4]],[[2,[5,3]],[[6,6],9]]],
        [0,[0,[0,[0,4]]]],
        [[[[9,7],[4,9]],[9,[3,5]]],[[9,7],7]],
        [5,[9,[[4,1],[2,9]]]],
        [[0,[8,4]],1],
        [[[9,[3,3]],[8,6]],[7,[[1,6],0]]],
        [[[1,[0,7]],[[9,1],8]],[[[2,2],5],[[7,1],[2,2]]]],
        [[[7,[0,3]],4],[[6,[1,6]],[8,7]]],
        [[[[4,8],3],[[6,1],7]],[8,[3,[7,8]]]],
        [3,[[[9,6],9],3]],
        [[[5,[1,0]],[1,4]],5],
        [[[[4,7],2],[[7,0],[6,7]]],[[1,[0,3]],0]],
        [9,[[3,7],[6,1]]],
        [[[2,5],[[0,7],[0,7]]],[[[0,3],2],8]],
        [[[[4,4],7],[2,[0,7]]],[[[1,4],[6,6]],[[8,9],[5,2]]]],
        [[[[0,8],5],[[3,5],7]],[[[5,6],[0,0]],[[3,8],6]]],
        [4,[8,[9,[2,3]]]],
        [[[[6,6],9],0],[[[2,9],[0,8]],5]],
        [[[8,[4,0]],[[2,1],[7,3]]],[8,7]],
        [[6,[9,[1,8]]],[[7,[7,9]],[[2,3],1]]],
        [[6,[[1,7],1]],[[[5,3],[2,0]],[[4,4],9]]],
        [[[[8,0],[0,3]],[[4,8],[0,9]]],[8,[7,[8,6]]]],
        [6,0],
        [[[[5,2],0],[3,3]],[0,4]],
        [[[9,5],[6,4]],[[[7,2],0],8]],
        [[[0,9],[5,[2,3]]],2],
        [[[[5,4],[2,9]],[1,[9,0]]],[[9,9],[9,6]]],
        [[[7,[4,8]],[9,8]],[[[1,3],0],[4,[4,7]]]],
        [[7,[7,9]],0],
        [[[[6,7],[8,1]],[[0,2],2]],[[[7,6],6],[[3,4],[9,9]]]],
        [[7,[6,[2,2]]],[[[8,8],[0,4]],[5,[7,7]]]],
        [[[[0,6],[9,2]],[8,1]],[[[0,4],2],[[5,9],[4,9]]]],
        [[[[9,1],[1,7]],[[3,1],[0,7]]],[[2,[4,9]],[9,1]]],
        [[[9,4],2],[[[2,3],3],[6,[5,7]]]],
        [[[0,8],[[0,9],2]],[[[0,7],[4,4]],7]],
        [[[5,2],4],[0,6]],
        [[3,[9,[9,2]]],[8,[1,[6,8]]]],
        [3,[7,[[8,0],[1,7]]]],
        [[[[2,4],[7,3]],[[0,7],0]],5],
        [[[[6,0],8],[1,4]],[[[3,3],[8,6]],5]],
        [[5,[5,[6,2]]],4],
        [[[0,7],[[4,1],4]],[[8,[3,2]],[7,7]]],
        [[1,[[6,5],[2,2]]],[[6,[2,8]],[1,0]]],
        [6,[4,[[2,2],[1,8]]]],
        [[[[3,3],1],[[4,1],7]],[[[5,2],7],[4,[4,7]]]],
        [[[[2,2],1],[[4,1],3]],[1,[[0,9],[3,8]]]],
        [[0,[0,4]],[[9,[7,5]],[8,[8,0]]]],
        [[[[0,3],3],[[7,3],5]],[4,[[0,1],[3,0]]]],
        [[4,8],3],
        [[[6,0],7],[[6,8],[8,6]]],
        [[[[8,5],3],[[6,2],[2,6]]],[[[2,7],5],[[3,8],[6,9]]]],
        [7,[4,2]],
        [[[[6,0],[7,8]],6],[[[4,6],6],7]],
        [[[0,[2,1]],[5,[3,8]]],[[[3,9],3],[[0,9],3]]],
        [[[8,6],[4,0]],[2,[[4,1],8]]],
        [[[0,1],[[2,0],5]],[[[0,1],[7,0]],[[1,2],[1,4]]]],
        [[[8,8],[[4,4],3]],[1,[4,1]]],
        [[[5,[0,7]],[7,5]],[[7,6],[5,5]]],
        [[[9,[1,3]],[[3,3],6]],[4,[[5,6],8]]],
        [[[9,[3,0]],[8,5]],[1,[[8,0],3]]],
        [[[3,[3,9]],[[2,4],[4,6]]],[[1,2],3]],
        [[[1,[3,1]],[3,[6,3]]],[1,[5,7]]],
        [[[[5,5],[1,5]],3],[9,[[7,4],[9,2]]]],
        [[[6,[7,1]],[[6,6],[1,6]]],7],
        [[[[1,4],0],[8,3]],[[[8,2],9],[[0,3],[9,5]]]],
        [[4,[1,[0,1]]],[[1,[7,3]],1]]
    ].